

<div class="booking_container">

  <div class="booking_sidebar">

  </div>
  <div class="booking_content">

    <div id="booking_bg"></div>

    <div class="details_holder">
      <h3 id="booking_black">Booking Details</h3>

      <%= form_tag charges_path, :id => "payment-form" do %>

        <input type="text" name="name" placeholder="Name">
        <input type="text" name="email" placeholder="Email Address">
        <input type="text" name="phone" placeholder="Phone Number">

        <div class="booking_schedule">
          <p>Confirm Booking</p>
          <hr>
          <div class="confirm_left">
            <p id="confirm_location"><%= $location %></p>
            <p id="confirm_date"><%= $date %></p>
            <p id="confirm_time"><%= $time %></p>
          </div>
          <div class="confirm_right">
            <p id="dollar_sign">$</p>
            <p id="confirm_price"><%= $price_formated %></p>
          </div>
        </div>


        <article>
          <% if flash[:error].present? %>
            <div id="error_explanation">
              <p><%= flash[:error] %></p>
            </div>
          <% end %>
        </article>

        <!-- Hidden Inputs -->
        <input type="hidden" value="<%= $price %>" name="price">
        <input type="hidden" value="<%= $location %>" name="address">
        <input type="hidden" value="<%= $postcode %>" name="postcode">

        <p>Payment Details</p>
        <div id="card-element">
          <!-- a Stripe Element will be inserted here. -->
        </div>
        <button>Complete Order</button>
      <% end %>

    </div>


  </div>
</div>


<script>
  var stripe = Stripe('pk_test_bYPWhbgHp18DAcn8qhmcC9hx');
  var elements = stripe.elements();

  //Step 2
  // Custom styling can be passed to options when creating an Element.
  var style = {
    base: {
      // Add your base input styles here. For example:
      fontSize: '1em',
      lineHeight: '24px',
      fontFamily: 'Open Sans',
      fontWeight: 'normal'
    }
  };

  // Create an instance of the card Element
  var card = elements.create('card', {style: style});

  // Add an instance of the card Element into the `card-element` <div>
  card.mount('#card-element');

  card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
    } else {
      displayError.textContent = '';
    }
  });

  //Step 3
  // Create a token or display an error when the form is submitted.
  var form = document.getElementById('payment-form');
  form.addEventListener('submit', function(event) {
    event.preventDefault();

    stripe.createToken(card).then(function(result) {
      if (result.error) {
        // Inform the user if there was an error
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
      } else {
        // Send the token to your server
        stripeTokenHandler(result.token);
      }
    });
  });

  //step 4
  function stripeTokenHandler(token) {
    // Insert the token ID into the form so it gets submitted to the server
    var form = document.getElementById('payment-form');
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);

    // Submit the form
    form.submit();
  }

</script>
