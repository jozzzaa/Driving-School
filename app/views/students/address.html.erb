<!-- <div class="booking_container">
  <div class="booking_sidebar">

  </div>
  <div class="booking_content">

  </div>
</div>

  <div class="option_container" id="booking_cont">

    <div class="underlay" id="booking_underlay"></div>

    <div class="booking_container">
      <div class="booking_title">
        <h3>- Start Driving -</h3>
        <h2>Make a Booking</h2>
      </div>
      <div class="booking_content">
        <form action="/booking-time" method="post">
          <input name="authenticity_token" value="<%= form_authenticity_token %>" type="hidden">
          <div id="locationField">
            <input id="autocomplete" placeholder="Enter your address"
                   onFocus="geolocate()" type="text"></input>
          </div>
          <input type="hidden" name="location" id="location_field">
          <input type="hidden" name="postcode" id="postcode_field">
          <button>Next</button>
        </form>
      </div>

    </div>

  </div>

  <script>

    var placeSearch, autocomplete;
    var componentForm = {
      street_number: 'short_name',
      route: 'long_name',
      locality: 'long_name',
      administrative_area_level_1: 'short_name',
      country: 'long_name',
      postal_code: 'short_name'
    };
    var input = document.getElementById('autocomplete');
    var options = {
      componentRestrictions: {country: 'au'}
    };

    function hiddenFields() {
      var place = autocomplete.getPlace();
      var locationAuto = place.formatted_address;
      var postcodeAuto = place.address_components[6].long_name;
      var locationField = $('#location_field')
      var postcodeField = $('#postcode_field')
      locationField.val(locationAuto)
      postcodeField.val(postcodeAuto)
    }

    function initAutocomplete() {
      autocomplete = new google.maps.places.Autocomplete(input, options);
      autocomplete.addListener('place_changed', hiddenFields);
    }

    // function fillInAddress() {
    //   var place = autocomplete.getPlace();
    //
    //   for (var component in componentForm) {
    //     document.getElementById(component).value = '';
    //     document.getElementById(component).disabled = false;
    //   }
    //
    //   // for (var i = 0; i < place.address_components.length; i++) {
    //   //   var addressType = place.address_components[i].types[0];
    //   //   if (componentForm[addressType]) {
    //   //     var val = place.address_components[i][componentForm[addressType]];
    //   //     document.getElementById(addressType).value = val;
    //   //   }
    //   // }
    // }

    function geolocate() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var geolocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          var circle = new google.maps.Circle({
            center: geolocation,
            radius: position.coords.accuracy
          });
          autocomplete.setBounds(circle.getBounds());
        });
      }
    }
  </script>

  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAkP5lEsBEXbAGW8YjSF17_OpaEIcy2g5M&libraries=places&callback=initAutocomplete"
      async defer>
  </script> -->
